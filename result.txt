Sentence:
 sometimes it will be better to use set tuple or dictionary list is the name given in python to dynamic arrays similar to from c++ or java

Nearest neighbors:
 1. sometimes those things matter a lot and java is the better language than python for a task (0.648)
 2. you should also consider the array module in the standard library if all the items in your list or tuple are of the same type (0.663)
 3. lastly lists are not hashable so the type of mapping done with dictionaries hash tables in perl associative arrays in php must be done with tuples (0.692)
 4. lists on the other hand are more like arrays in other languages (0.697)
 5. it s not like you absolutly can t get around privateness of members in any language pointer arithmetics in c++ reflections in .net java (0.704)
 6. so if you want to iterate through a constant sequence of values in your code eg for direction in up right down left tuples are preferred since such tuples are pre-calculated in compile time (0.713)
 7. however it s also worth noting that you should use a list if you want to use any of the list methods (0.714)
 8. i m not clear on what your requirements are for passing types between c c++ and python but you can do that easily by either exposing a c++ type to python or by using a generic boost python object argument to your c++ api (0.714)
 9. also because tuples are immutable they can be used as keys in dictionaries (0.715)
 10. they may be used in place of a list comprehension to save memory list comprehensions create a list in memory that is destroyed after use if not assigned to a variable but generator expressions can create a generator object. (0.719)
 11. it is much easier to create a python perl ruby program to link to a web service and throw some data against it than it is to create the equivalent java program (0.719)
 12. so if you re creating a few tuples and accessing them many many times it may actually be faster to use lists instead (0.720)
 13. returning a tuple is the usual way to do this in python (0.721)
 14. python is not java (0.721)
 15. of course if you want to change an item the list will definitely be faster since you d need to create an entire new tuple to change one item of it since tuples are immutable (0.723)
 16. it will also make it easier possible for those scripts to call c++ functions in your application (0.724)
 17. in this case you can see that accessing an element generates identical code but that assigning a tuple is much faster than assigning a list (0.725)
 18. in python you have tuple assignment so you can say but in java you d need to either resort to mutable out parameters or have a custom class with 2 fields and then have two additional lines of code to extract those fields (0.729)
 19. one of the problems you may find is that python objects - like lists and dicts - may have references to other python objects in this case what would your size be (0.729)
 20. sometimes it is sufficient to return x y instead of point x y (0.730)
 21. as i understand it random access is in constant time for both python s dicts and lists the difference is that you can only do random access of integer indexes with lists (0.730)
 22. basically you should use tuples when there s a constant structure the 1st position always holds one type of value and the second another and so forth and lists should be used for lists of homogeneous values (0.730)
 23. there is a proposal pep 372 to add an ordered dictionary that keeps track of the order of insertion to the collections module in the standard library (0.731)
 24. in python arguments are passed by reference but in the sense of java not c++ (0.731)
 25. as others have mentioned lists and tuples are both containers which can be used to store python objects (0.732)
 26. len is an o 1 operation for python lists strings dicts and sets (0.733)
 27. i like to use double quotes around strings that are used for interpolation or that are natural language messages and single quotes for small symbol-like strings but will break the rules if the strings contain quotes or if i forget (0.733)
 28. sometimes you need to give it some mapping dicts since the source and installed trees might not be the same (0.734)
 29. so when you have lists that are not volatile in nature and you need to guarantee that no consumer is altering it you may use a tuple (0.735)
 30. i put static in quotes because python does not really have static variables in the sense that c++ and java do (0.736)
 31. i use double quotes in general but not for any specific reason - probably just out of habit from java (0.736)
 32. if it s nearly all duplicates with few unique items creating a new list will probably be faster (0.736)
 33. the truth about unicode in python is a very good article which cites directly from the python developers (0.736)
 34. a dictionary may also contain overhead depending on the actual implementation (0.736)
 35. you can access the fields of a class using a dictionary because the fields of a class its methods and all its properties are stored internally using dicts at least in cpython (0.736)
 36. it would be different if python used private and protected members more like java does (0.739)
 37. is it better to do it yourself spend the larger amount of time to make java c# do the task or spend a much smaller amount of time doing it in python perl ruby (0.740)
 38. you can also register converters to automatically convert python types to c++ types and vice versa (0.741)
 39. you can use a tuple for a lot of things where you would use a struct in c something like x y coordinates or rgb colors for example (0.741)
 40. if you need to add more fields later all you need to change is the code that converts the tuple to a dictionary and the code that actually makes use of the new values (0.742)
 41. use a named tuple which was added to the collections module in the standard library in python 2.6 (0.743)
 42. note this has become a popular answer but it is important to point out that if y has any non-string keys the fact that this works at all is an abuse of a cpython implementation detail and it does not work in python 3 or in pypy ironpython or jython (0.743)
 43. sometimes this can mean to skip index use altogether after all it s disk access too (0.743)
 44. this is a shortcut that allows you to pass multiple arguments to a function directly using either a list tuple or a dictionary (0.744)
 45. also using other languages ruby that don t have much setup cost will let you quickly prototype ideas before implementing them in c++ java etc (0.745)
 46. you can convert the tuple to a dictionary this way (0.745)
 47. sometimes you can get away with the tee function from itertools it returns multiple iterators for the same generator that can be used independently (0.745)
 48. however in situations where an enum would be called for in c i usually end up just using simple strings because of the way objects attributes are implemented c python is optimized to work very fast with short strings anyway so there wouldn t really be any performance benefit to using integers (0.746)
 49. if it takes you longer to create a code generator than it takes to hand code once but you know you will have to update the code more than once it may still make sense (0.746)
 50. java has much better performance than python and has way better tool support (0.746)
 51. in java i need a static method to be able to access an instance s private members to do stuff (0.746)
 52. there are other options like a list of tuples or a tuple of tuples but the dictionary is the only one that provides you with a symbolic constant string way to access the (0.746)
 53. obviously this would create a new list which contains each member of the set so not great if your set is very large (0.746)
 54. then your class is already a dictionary and if you want you can override getattr and or setattr to call through and set the dict (0.747)
 55. another alternative is to embed python in your c++ program (0.747)
 56. if you do find you need to write unique code for an environment use pythons (0.748)
 57. it can be convenient to use this to create a python list containing the values returned (0.748)
 58. otherwise if it s really important to be able to interface with scripting languages your best bet is simply to use files pipes or sockets or even a higher level abstraction like http (0.748)
 59. if you do wish to use a class there is no way of creating private classes or private constructors in python so you can t protect against multiple instantiations other than just via convention in use of your api (0.748)
 60. it is a lot easier to do text parsing in perl ruby python than it is in java or c# partially because it is a lot easier to use regular expressions (0.748)
 61. it s bad to name any variable after a built in function (0.749)
 62. if you plan on using metasploit for pen-testing and exploit development i would recommend ruby as mentioned previously metasploit is written in ruby and any exploit module development you may wish to do will require ruby (0.749)
 63. the list 1 2 3 is dynamic and flexible but that flexibility comes at a speed cost (0.749)
 64. generally by convention you wouldn t choose a list or a tuple just based on its im mutability (0.750)
 65. usually you ll declare your methods at class level and your attributes at instance level so __dict__ should be fine (0.750)
 66. in general using variable names that eclipse a keyword or built-in function in any language is a bad idea even if it is allowed (0.751)
 67. i d say that a dictionary is definitely the best way to do it (0.751)
 68. also some things are easier with dynamic languages than java c# c c++ (0.752)
 69. short answer there s no way to do inline variable assignment in a while loop in python (0.752)
 70. things like default namespace handling are easier in other libraries (0.753)
 71. if it s mostly unique items removing them from the original list or a copy will be faster (0.753)
 72. since they re immutable they can be used as keys for a dictionary lists can t (0.754)
 73. note that best practice in python 2.7 is to use new-style classes not needed with python 3 (0.754)
 74. there are also a lot of little libraries that you might not get in other languages and would have to write yourself how a c++ developer writes python (0.754)
 75. in python 2.x there is no way to know if t should be above b or the other way around since you receive the contents of the class definition as a python dict (0.756)
 76. will work with anything that iterates be it a tuple list or whatever (0.758)
 77. nothing really like static attributes in the sense of java c++ (0.758)
 78. use this to set an attribute on an object (0.758)
 79. in general you might expect tuples to be slightly faster (0.759)
 80. tuples should be a low-level representation of an object where simple comparisons are made or operations such as extracting the n th element or n elements in a predictable fashion such as the coordinates example given earlier (0.759)
 81. if you don t want to use sqlite you could do an array of dicts (0.759)
 82. if you really want to use more complicated data structures or modify the passed arguments swig or python s standard c-extension interface will let you do what you want but with some amount of hassle (0.759)
 83. i don t know of any but if all else fails you could use ctypes to directly use libdwarf libelf or libbfd (0.759)
 84. and as far as i know the docstrings thing is not available in java (0.759)
 85. for example you would use a list to store a list of student details in a class (0.760)
 86. the statement is is used for object identity it checks if objects refer to the same instance same address in memory (0.760)
 87. in c a string is just an array of characters which means you ll need to do a lot more work or look seriously at libraries which add the features you re used to (0.761)
 88. so after some string mangling and concatenation you should be able to obtain appropriate exception class name and construct a class object using that name and then raise that exception (0.762)
 89. the len built-in function appears to be simply a wrapper for a call to the hidden len method of the object (0.762)
 90. you would choose a tuple for small collections of completely different pieces of data in which a full-blown class would be too heavyweight and a list for collections of any reasonable size where you have a homogeneous set of data (0.762)
 91. so in this case instantiation is almost an order of magnitude faster for the tuple but item access is actually somewhat faster for the list (0.763)
 92. you could use a dictionary (0.763)
 93. suitability for high level tasks if you try to implement the same type of application in c as you might in php you ll find it very slow going (0.764)
 94. the convention in python is that you add __foo__ special methods to objects to make them have certain capabilities rather than deriving from a specific base class (0.764)
 95. i don t know of any tutorials guides but you could try looking at the source for tinypy it s a very small implementation of a python like language (0.764)
 96. tuples being immutable are more memory efficient (0.765)
 97. if you want to change the value of a static variable you must change it within the scope or object where it was originally defined (0.765)
 98. it will probably take a lot less time to parse the text file using perl ruby python or maybe even vbscript cringe and then load it into the database than it would to create a java c# program to do it or to do it by hand (0.765)
 99. the most interesting thing about them is that they can be overridden by subclasses something that s simply not possible in java s static methods or python s module-level functions (0.766)
 100. i think you should make your own authentication method as you can make it fit your application best but use a library for encryption such as pycrypto or some other more lightweight library (0.766)
 101. there s far less idioms required to be involved in writing good python code than in writing good c++. (0.766)
 102. java is not python either (0.767)
 103. personally i tend to be of the opinion that if you need to return more than one value from a function you should reconsider if you re doing things the right way or use an object (0.767)
 104. or just make the key a tuple with time.now as the first field in the tuple (0.767)
 105. if opting for the system-call path python offers an array of options such as os.system or the commands subprocess modules (0.767)
 106. or rather you should always use new-style classes unless you have code that needs to work with versions of python older than 2.2 (0.768)
 107. for example if i had to parse a complex csv file and figure out which of its rows corresponded to rows in our oracle database this was much easier to do with python than java (0.768)
 108. it s open source and is supported on pretty much every os you can think of as well as having language support for c++ c# java ruby python and php (0.768)
 109. java has basic types which aren t objects which is why many classes in the standard library define 9 different versions of functions for boolean byte char double float int long object short (0.768)
 110. a dictionary might be easy to use and give you relatively uniformly fast access it will most likely use more memory than as you suggest lists (0.768)
 111. alternatively depending on what you want to do it might be nice to inherit from dict (0.769)
 112. i would use a dictionary (0.769)
 113. as for using arrays with boost i personally haven t done this but i know the functionality to expose arrays to python using boost is available - this might be helpful (0.769)
 114. also if you re using python 2.4+ you can use generator expressions instead of creating a list via then turning it into a tuple via tuple (0.769)
 115. if you want to improve responsiveness you should consider using threads (0.770)
 116. note that the order of values passed to the constructor is undefined but will come before values passed later and you could always just not allow ordered dicts to be initialized with values. (0.770)
 117. basically you are enabling your .net classes to be called through com activex from your win32 code delphi or c++ (0.770)
 118. if an index is used search it for the pointers to the actual data then go to the appropriate location in the data or (0.770)
 119. tuples can be thought of as being similar to pascal records or c structs (0.770)
 120. something to keep in mind is that each additional index creates some additional cost it is best if you can use as few access patterns as possible since it will reduce the number of indices gae will construct and thus the total storage required by your data (0.770)
 121. if you plan on searching anything of remotely decent size your best bet is going to be to use a dictionary or a set (0.771)
 122. first of all the itertools module is incredibly useful for all sorts of cases in which an iterator would be useful but here is all you need to create an iterator in python (0.771)
 123. immutable data types in general have many benefits mostly about concurrency issues (0.771)
 124. tuples make good dictionary keys when you need to combine more than one piece of data into your key and don t feel like making a class for it (0.771)
 125. its name is somewhat misleading because it kind of implies it might be a random item or something like that (0.771)
 126. it s rare that python code execution would be your performance bottleneck in a web app (0.771)
 127. perhaps this is overkill for your case but i would be tempted to create a job class that takes the tuple as its constructor argument and has respective properties on it (0.771)
 128. in python rather than c or c++ (0.772)
 129. it s also possible to use raymond hettinger s named tuple recipe if you need to support python 2.4 (0.772)
 130. yeah java has gotten better since 1.5 but for example you can iterate through a string in python with this same construct (0.772)
 131. names are still supported in python (0.772)
 132. with the introduction of named tuples in python 2.6 it is preferable in many cases to return named tuples instead of plain tuples (0.773)
 133. i won t help much but i remember that i was able to wrap a matlab simulation into dll and then call it from a delphi app (0.773)
 134. if you are trying to scale across multiple cores on a machine either find a good ipc framework for python or pick a different language (0.773)
 135. tuples are used whenever you want to return multiple results from a function (0.773)
 136. tuples should be slightly more efficient and because of that faster than lists because they are immutable (0.773)
 137. and class instances can change class variables (0.773)
 138. if randomness is important and you need a bunch of elements in constant time large sets i d use random.sample and convert to a list first (0.773)
 139. you can just use json or xml interfaces just like with other ajax frameworks (0.773)
 140. this makes python pass the variable which is assumed to be a dictionary as keyword arguments (0.774)
 141. but alist.append item is much preferred to when you deal with mutable data (0.774)
 142. in python all methods are just variables that happen to be functions (0.774)
 143. in addition keyword arguments for dictionary creation was only added in python 2.3 whereas copy and update will work in older versions (0.774)
 144. you then usually want to loop on this list and test the option name as in the example (0.774)
 145. the actual method lookup name is taken from (0.774)
 146. some primitive object types like integers floats strings and touples are immutable in python (0.775)
 147. where i often see the dynamic languages used for is testing (0.775)
 148. for example for all the people who dislike the stop-the-world approach of the default sun java vm gc behaviour there are vm such as ibm s websphere real time which allows real-time application to run on java (0.776)
 149. in java if you want a constructor that can take up to 5 optional arguments you must define 6 different versions of that constructor (0.776)
 150. to build a dictionary from an arbitrary object it s sufficient to use __dict__ (0.777)
 151. to build a dictionary from an arbitrary object it s sufficient to use __dict__ (0.777)
 152. in a more general sense of not having to explicitly set variables in each view it sounds like you want to look at writing your own context processor (0.777)
 153. however if you re talking about working with a large existing php code base with a lot of very experienced php programmers who are happy with their current setup then switching languages is probably not a good idea (0.777)
 154. i do not believe so as python is a whitespace-delimited language (0.777)
 155. always if you are using external libraries and need to pass in a list of values to a function and are unsure about the integrity of the data use a tuple (0.777)
 156. python has a lot of built-in functions that 1 have common names and 2 you will not use much anyway (0.777)
 157. i might say something unpopular here id is a rather specialized built-in function that is rarely used in business logic (0.777)
 158. there are a number of things that represent false in a boolean value tests for example empty containers boolean values (0.777)
 159. in python 3.x you can also add a starred placeholder at the end which will soak up all the remaining values of the range in case you don t mind wasting memory and cannot count (0.778)
 160. also having experience with a variety of different programming languages should help you think of new ways to tackle problems in more structured languages like java c++ and c# (0.778)
 161. while this would likely be more difficult to maintain it would eliminate regex compilation entirely from your application (0.778)
 162. if you need to use something similar to the template tag in your code django provides the django.core.urlresolvers.reverse (0.778)
 163. instead of hand coding a bunch of enums a dynamic language can be used to fairly easily parse a text file and create the java c# code with the enums (0.778)
 164. this won t work for built-in classes like bool but it will for your user-defined classes (0.779)
 165. more information is available here in the python library reference (0.779)
 166. for everything else you can use dictionary or a utility class like this one (0.779)
 167. lack of built in data structures php and co all have native string types and useful things like hash tables built in which is not the case in c (0.779)
 168. you might also consider adding a layer of abstraction to your system so that you don t have to change the programming interface if you later on need to change the internal data structure (0.779)
 169. object.__class__.__name__ will give the name of the class of an object (0.779)
 170. if the result order or count changes you just need to change the list of keys to match the new result (0.779)
 171. i frequently choose to use closures in the strategy pattern when the strategy is modified by data at run-time (0.779)
 172. the name can be reassigned to a different object but the object itself may not be changed (0.779)
 173. if you re missing hash tables try writing your own or find a library (0.780)
 174. if the module s name does not contain any package information it is set to __main__ then relative imports are resolved as if the module were a top level module regardless of where the module is actually located on the file system (0.780)
 175. if your python scripts call these functions then you will either need to have your users install python or include the python runtime files with your application (0.780)
 176. the tuple 1 2 3 is fixed immutable and therefore faster (0.781)
 177. if you want to exclude classes and other random objects that may have a __call__ method and only check for functions and methods these three functions in the inspect module (0.781)
 178. from there the standard is c or c++ (0.781)
 179. or is the names of the properties changing a lot from node to node (0.781)
 180. consider tuple as an ad-hoc compound data structure (0.781)
 181. of course if you just want to have a look at the docstrings while you re working on stuff there s the pydoc command line tool and as well as the help function available in the interactive interpreter (0.781)
 182. many of the python functions use modules which are not built into the python interpreter (0.782)
 183. but if you want to write second google or yahoo you will be much better with c# or java (0.782)
 184. there is some good info below on why certain things are functions and other are methods (0.782)
 185. it s easily extensible allows you to give each value a sensible name and python has a lot of built-in language features for using and manipulating dictionaries (0.782)
 186. remember tuples are intended to be treated as records without field names (0.782)
 187. the standard implementation of python generally known as cpython as it is written in c uses os threads but since there is the global interpreter lock only one thread at a time is allowed to run python code (0.782)
 188. java is the language that most recent graduates will be most familiar with (0.782)
 189. a statement will still be a statement no matter which scope it is defined within scope can often be handled by a different part of the compiler interpreter generally during a semantic parse (0.782)
 190. i will leave you with one last example of a task that would have been great for a dynamic language (0.783)
 191. java has some of this but usually in java it takes half a page of code to get an instance of a class whereas in python it is about 3 lines (0.783)
 192. if you are sure that you need to exit a process immediately and you might be inside of some exception handler which would catch systemexit there is another function - os._exit - which terminates immediately at the c level and does not perform any of the normal tear-down of the interpreter (0.783)
 193. i don t think trying to make python look like c is a very good idea (0.783)
 194. in your case this object is a tuple (0.783)
 195. it is a list of strings defining what symbols in a module will be exported when is used on the module (0.783)
 196. you will recognise a lot of things from php and you will be surprised how much php and perl python etc do for you (0.784)
 197. john s answer is good that list comprehensions are better when you want to iterate over something multiple times (0.784)
 198. like in c you skip the first element which is the name of your program and parse only the arguments (0.784)
 199. you will need to do testing to determine what is the exceptable amount of time you want to wait for each hash to be computed versus the risk of an offline dictionary based attack on your password file (0.784)
 200. lists however generally tend to contain more overhead when you insert data into it unless they preallocate x nodes in which they will again use more memory (0.784)
 201. the and is a common idiom to allow arbitrary number of arguments to functions as described in the section more on defining functions in the python documentation (0.784)
 202. there also might be more sophisticated problems such as swapping rows to disk if for some reason the result set can t be completely processed in memory (0.784)
 203. it s only at python 2.2 but still very useful if you need an embedded interpreter that has access to the java runtime (0.784)
 204. there are often already many binary functions like + min max concatenation and in my case make_and and make_or (0.784)
 205. also lists cannot be used as keys in a dictionary whereas tuples can (0.784)
 206. making a class-based structure would probably have more overhead than the dict-based structure since in python classes actually use dicts when they are implemented (0.784)
 207. if you will be using immunity canvas for pen testing then for the same reasons i would recommend python as canvas is written in python (0.784)
 208. it also provides a php class for accessing and using fmp data in web applications (0.784)
 209. it is intended to avoid accidentally exporting items that are not part of the api such as library modules which were imported and used within the module (0.785)
 210. returning multiple values is sometimes very very useful (0.785)
 211. my suggestion in general would be to just use the method that seems the most natural to you and then do a stress test of the system adding a substantial amount of data to it and see if it becomes a problem (0.785)
 212. it was not clear from your question whether you wanted the python scripts to call your c++ program or whether you just wanted the c++ to call python (0.785)
 213. better still install the path.py module it wraps all the os.path functions and other related functions into methods on an object that can be used wherever strings are used (0.785)
 214. it also has a number of immediate benefits like the ability to subclass most built-in types or the introduction of descriptors which enable computed properties (0.785)
 215. your only problem would be the performance part as python will likely never be as fast as a compiled c++ program (0.786)
 216. an empty list is itself considered false in true value testing see python documentation (0.786)
 217. although it doesn t say anything specific about static variables or methods the python tutorial has some relevant information on classes and class objects (0.786)
 218. it might not be the best only way (0.786)
 219. i often find myself filtering mapping lists and being able to say is really nice (0.786)
 220. if you have enough memory and need the speed use garbage collection (0.786)
 221. to clarify the timings the java code is not reading from disk making it a totally unfair comparison if postgres is reading from the disk and calculating a complicated query but that s really besides the point the db should be smart enough to bring a small table into memory and precompile a stored procedure imho (0.786)
 222. for example to use a metaclass it s sometimes handy to do (0.787)
 223. if you want someone to agree with you that you should use python then show them how python s features apply specifically to that problem (0.787)
 224. you can take a look at how to dynamically create a zip file in python here (0.787)
 225. yes returning multiple values a tuple is definitely pythonic (0.787)
 226. and as for what makes python easier than java you might check out this question java - python (0.787)
 227. remember python has one of the most efficient hashing algorithms around (0.787)
 228. more than that i found that learning python made me a much better java programmer (0.787)
 229. in essence what you re doing is saying for item in list if criteria.matches and from that you can just iterate through the results or dump the results into a new list (0.787)
 230. why use static method in pythonic sense if it has no relation whatever to the class (0.787)
 231. in the past i have used swig to generate python interfaces to c++ code (0.787)
 232. as far as i know there are no real bugs but the performance when threading in cpython is really bad compared to most other threading implementations but usually good enough if all most of the threads do is block due to the gil global interpreter lock so really it is implementation specific rather than language specific (0.787)
 233. the people who are bad with memory management actually tend to be bad with all languages (0.788)
 234. on the other hand you could use this approach metaclasses and friends to simplify the definition of certain classes of user interfaces for an existing ui library and depending of the application that could actually save you a significant amount of time and code lines (0.788)
 235. there are languages where almost every single function returns multiple values list in lisp (0.788)
 236. in python 3 it is possible to use on the left side of an assignment extended iterable unpacking though it gives a list instead of a tuple in this context (0.788)
 237. a common practice is to put the tests directory in the same parent directory as your module package (0.788)
 238. i d go one step further and use sets (0.788)
 239. cons as a dynamic language has way worse ide support proper syntax completion requires static typing whether explicit in java or inferred in sml its object system is far from perfect interfaces anyone (0.788)
 240. everyone is doing java c# c++ (0.788)
 241. you see when you declare a class you are actually creating a pretty complex wrapper around a dictionary - so if anything you are adding more overhead than by using a simple dictionary (0.788)
 242. btw i believe js did have support for accessing locals through the arguments local at one time - a quick search shows this has been deprecated though (0.788)
 243. variables declared inside the class definition but not inside a method are class or static variables (0.788)
 244. security is hard and the method i present is not the best way to do this but it is significantly better than a simple hash (0.789)
 245. you have to implement your own comparison function that will compare the dictionaries by values of name keys (0.789)
 246. lists are containers for well lists of objects (0.789)
 247. if x and y are column vectors you can do (0.789)
 248. python makes this very easy timeit is your friend (0.789)
 249. but in general sets don t support indexing or slicing (0.789)
 250. if you start using regular expressions in perl and realize their value you may suddenly start making use of the java regular expression library if you haven t before (0.789)
 251. an example of a small ruby perl script that could be written quickly would be a script to parse a very large log file and report out only a few events of interest in either a human readable format or a csv format (0.789)
 252. if your backend is java and you want to use only a free product you can also use graniteds or weborb blazeds competitors (0.789)
 253. just in case you might need to this may help if you need to grab unicode arguments on win32 2k xp etc (0.789)
 254. lists and tuples while similar in many respects are generally used in fundamentally different ways (0.789)
 255. class methods are for when you need to have methods that aren t specific to any particular instance but still involve the class in some way (0.789)
 256. if you really are talking about parallel computing then you should take a look at the parallel computing toolbox for matlab and more specifically at parfor (0.789)
 257. if defined it must be a sequence of strings which are names defined or imported by that module (0.789)
 258. it will require that you encode all of your data as xml and load it into memory (0.790)
 259. there is a better way (0.790)
 260. in most cases however you simply learn the pythonic way of doing things (0.790)
 261. it is just a way of collecting some variables - the name of the class the bases a little dictionary of attributes and a metaclass (0.790)
 262. now you are free to pass foo s to a library that expects foo instances to have a method named foobar (0.790)
 263. there are some pointers overhead and internal structures related to object types and garbage collection (0.790)
 264. you don t need to worry about memory management yet but you can get used to having a bit more freedom and less handholding from the language interpreter (0.790)
 265. in that case i would suggest looking at the csv module in the standard library (0.790)
 266. readability is also one of the reasons for enforced line indentation (0.790)
 267. there are two types of them mutable and immutable (0.790)
 268. both idioms can be mixed with normal arguments to allow a set of fixed and some variable arguments (0.790)
 269. although pyqt is a direct port from the c++ library i find it much more pythonic and nice to program with compared to the others you listed (0.790)
 270. generally better designed libraries (0.791)
 271. i hate to say this but f you want something that your incoming developers are going to be familiar with go with java (0.791)
 272. occasionally i d have to do serious text-processing tasks which were much easier to do with quick python scripts than java programs (0.791)
 273. in c++ for example method arguments can be passed by reference so you can assign output values to them in addition to the formal return value (0.791)
 274. i m a ms-sql guy myself and we d use dbcc pintable to keep a table cached and set statistics io to see that it s reading from cache and not disk (0.791)
 275. if this isn t necessarily performance sensitive code then the list comprehension way should work (0.791)
 276. i m assuming that you need to lookup a node by its label so you want a dict of dicts (0.791)
 277. if speed ends up being a bottleneck your abstraction makes the process of switching to a native python implementation transparent to your client code (0.791)
 278. python doesn t have a built-in equivalent to enum and other answers have ideas for implementing your own you may also be interested in the over the top version in the python cookbook (0.791)
 279. imo yes you should define a new class that keeps an int as an instance variable (0.792)
 280. the pep for subprocess pep 324 has a little bit of discussion on the name of the module but not of class popen (0.793)
 281. another option is to use a different implementation of python that does not use a gil (0.793)
 282. closures are a common implementation mechanism for that sort of function factory (0.793)
 283. i m not familiar with the specific services listed but the field of natural language processing has developed a number of techniques that enable this sort of information extraction from general text (0.793)
 284. refactoring is inevitable on larger codebases and the lack of static typing makes this much harder in python than in statically typed languages (0.793)
 285. you would just have have add to your dictionary a list of required files (0.793)
 286. it covers set dicts lists etc at least as far as time complexity goes (0.793)
 287. where the second to last argument is the return type and the last argument is a tuple of argument types (0.793)
 288. boost is probably the best choice however if you re wanting something that s more standalone and if this is for use with windows which seems feasible given that they are the people least likely to have python installed then you can use py2exe to create a dll with entry points suitable for com objects (0.793)
 289. which is the best language for your particular use case is too subjective to answer so i won t try but often the answer will be the one your developers know best (0.793)
 290. a book you may be interested in is game programming with python lua and ruby (0.794)
 291. i m only talking about web development because it appears that s what you are going to be working on seeing ruby python and php in the same list (0.794)
 292. learning lower level assembly type languages might make this easier but c is probably a bridge to do that not the other way around (0.794)
 293. to do multiprocessing on windows you will need to use the threading module (0.795)
 294. as a side note people new to programming often have trouble with the idea of object oriented programming they will say they understand it when you teach it to them but will not get a clear concept of it until actually implementing it (0.795)
 295. class.__name__ will give the name of the class as a string (0.795)
 296. so never forget to pass your parameters in the parameters list then you don t have to care about your quotes and stuff it is also more secure (0.795)
 297. django will be trying a dictionary lookup but using the string item and not the value of the item loop variable (0.795)
 298. in addition when you use .items pre python 3.0 you re creating a new list that contains the items from the dict (0.795)
 299. you may also want to check some old description about pyobject the internal c struct that represents virtually all python objects (0.795)
 300. it s certainly more work but you probably need to bite the bullet and set up an end-to-end regression test suite fixed c++ files - swig interfaces - python modules - known output (0.795)
 301. especially if you are using windows where the file could be named _vimrc instead of .vimrc as on other platforms (0.795)
 302. lists should be used with the expectation of operations on its contents hence the various mentions of immutability (0.795)
 303. you are right that static analysis may not provide full syntax completion for dynamic languages but i thing pydev gets the job done very well (0.795)
 304. if the directory is in your pythonpath or sys.path you can do import directoryname to import everything in the directory or import directoryname.some_file_in_directory to import a specific file that is in the directory (0.795)
 305. that s usually more efficient as the key is only calculated once per item while the comparison function would be called many more times (0.795)
 306. also allot of fuzzing frameworks like peach and sulley are written in python (0.795)
 307. obscure one-liners may seem cool but in the face of maintainability try to choose something sensible (0.796)
 308. new-style classes are created by specifying another new-style class a type as a parent class or the top-level type object if no other parent is needed (0.796)
 309. first you will need some gui library with python bindings and then if you want some program that will convert your python scripts into standalone executables (0.796)
 310. the classic hi-lo number guessing game can be simply implemented from the command line in 20-30 lines of code depending on language of course and gives you variables conditions loops and user input (0.796)
 311. the best way to justify an expense is to show how it reduces a cost somewhere else so you may need to spend some extra personal time to learn something first to build some kind of functional prototype (0.796)
 312. this is different from c++ and java but not so different from c# where a static member can t be accessed using a reference to an instance (0.796)
 313. note that both cases keep the values for which the predicate function evaluates to true so you have to reverse the logic you say keep the people who do not have the last name smith instead of remove the people who have the last name smith (0.796)
 314. if you want rpc rather than just ipc i would suggest something like xml-rpc soap which runs over http and can be used from any language (0.796)
 315. not sure if this will completely answer your question but you can use struct.unpack to convert binary data to python objects (0.796)
 316. if you don t need to be doing something similar than it probably isn t a good use case (0.796)
 317. you might want to try yami it s very simple yet functional portable and comes with binding to few languages (0.796)
 318. if you truly must have something that is private then you can implement it in an extension in c for cpython (0.796)
 319. you should be able to unit test the internal pieces of your code generator (0.796)
 320. id is a built-in function that gives the memory address of an object (0.797)
 321. i find them useful when you always deal with two or more objects as a set (0.797)
 322. there is a big chunk of code and an updated big chunk of code out there to try to best approximate the size of a python object in memory (0.797)
 323. you could keep much of your application the same and make calls out to python for the pieces that change often or need the flexibility that a scripting language provides (0.797)
 324. i think the article java theory and practice a brief history of garbage collection from ibm should help explain some of the questions you have (0.797)
 325. whether or not this is a problem depends on what you re doing with the text if the order doesn t matter it s fine or if the generator adds text to the stream in the order it will be displayed it s fine (0.797)
 326. if you want the simple approach this should work (0.797)
 327. it s not clear why you need a bridge language (0.797)
 328. can be deduced except when you have variable names that make it impossible to deduce (0.797)
 329. it is however useful to understand what is difficult about learning c which might help you understand what s making it difficult for you (0.797)
 330. python would probably remove most of the low level stuff that you use in your application (0.798)
 331. embeding the python interpreter inside your c++ app will let you run python programs using your application run python scripts (0.798)
 332. the version i saw focussed mainly on set and dict but list was covered too (0.798)
 333. they re small collections of related data which may be of different types which are operated on as a group (0.798)
 334. as you have discovered one workaround is in fact to use the to_char method (0.798)
 335. of course as others have mentioned there s more than just speed involved in the business case to switch languages (0.798)
 336. jython and ironpython are useful if you have an overriding need to interface with existing libraries written in a different platform like if you have 100 000 lines of java and you just want to write a 20-line python script (0.798)
 337. it would be like thinking i could set a variable in one php script and then magically get it with another simply by running one after the other (0.798)
 338. if you re wanting to use ctypes you can use atsfontgetfilereference after looking up the atsfontref (0.798)
 339. basically it still is a for loop with the addition that it will retrieve the data from the two seperate lists for you instead that you have to do it yourself (0.798)
 340. i surely believe any application can be written faster and better using python (0.799)
 341. personally i would use a classmethod whenever i needed a static method (0.799)
 342. what you can gain by messing with metaclasses and indeed by nesting classes within your stock standard classes is harder to read code harder to understand code and odd errors that are terribly difficult to understand without being intimately familiar with why the class scope is entirely different to any other python scope (0.799)
 343. as your question is tool writing and exploit development i would recommend ruby if you choose metasploit or python if you choose canvas (0.799)
 344. to the contrary when i read x.len i have to already know that x is some kind of container implementing an interface or inheriting from a class that has a standard len (0.799)
 345. it will depend on what modules you import in you python scripts (0.799)
 346. what would have been instance methods on your class become just functions in the module and any data just becomes variables in the module instead of members of the class (0.799)
 347. if you are working on performance critical applications use c or something (0.799)
 348. you can also use named arguments (0.799)
 349. it is a modified version of with the regex on the attribute values to prevent people from using and other cases described at (0.799)
 350. the other thing that dynamic languages are big on is code generation (0.799)
 351. many small lists will waste a lot of space but large lists never waste more than about 12.5 to overallocation (0.799)
 352. the temporary list can be avoiding by using a generator expression (0.799)
 353. unlike java where there are exceptions that must be declared to be raised and some that don t have to be but that s another story any python code may raise any exception at any time (0.799)
 354. if you have a class myclass and a module-level function that operates on myclass factory dependency injection stub etc make it a classmethod (0.800)
 355. if you are running the scripts then you can set your path variable to point to a private bin directory first (0.800)
 356. i d recommend looking into a pure javascript framework probably jquery for your client-side code and write json services in python- that seems to be the easiest bestest way to go (0.800)
 357. if your query makes good use of indices i know that for mysql databases it helps to put indices and data on separate physical disks (0.800)
 358. xrange is an iterable version of range which has the advantage of not prebuilding the list (0.800)
 359. the python library reference is your friend (0.800)
 360. if i m not mistaken the zip function you use in python creates a pair of the items found in list1 and list2 (0.800)
 361. it is very likely that the nbl will have many of the features present in today s scripting languages first-class functions closures streams generators etc (0.800)
 362. the name mangling makes it unlikely anyone will do it by accident (0.800)
 363. however jimmy s answer is better (0.800)
 364. no matter if you subclass from object or not classes are new-style in python 3 (0.800)
 365. creates an attribute on the class b and the attribute can be found in b.__dict__ alternatively if you have an instance b of type b you can see the class level attributes in b.__class__.__dict__ (0.800)
 366. it is always better to get buy in for a code generator (0.801)
 367. you could use a custom comparison function or you could pass in a function that calculates a custom sort key (0.801)
 368. qt can also be used in several other programming languages (0.801)
 369. the people who use python well tend to be fine with manual memory management (0.801)
 370. int is a value type so each time you do an assignment both instances of + above it doesn t modify the object you have on the heap but replaces the reference with one of the result of the right hand side of the assignment an int (0.801)
 371. variable can always change (0.801)
 372. if you plan use boost.python the tutorial is a good place to start (0.801)
 373. one big reason to learn perl or ruby is to help you automate any complicated tasks that you have to do over and over (0.801)
 374. dicts are even more complicated since they can operate in different ways they have a different implementation for small number of keys and sometimes they over allocate entries (0.801)
 375. cpython is the reference implementation and developed by guido and the core developers (0.801)
 376. mature or at least reasonable c foreign function interfaces for api access (0.801)
 377. it is easier to adapt when the next big language emerges (0.802)
 378. point is java will not be the last programming language ever and also you will most likely switch employers as well (0.802)
 379. the docs say that if unicode is set w will match the characters 0-9_ plus whatever is classified as alphanumeric in the unicode character properties database (0.802)
 380. you can take advantage of the optional parameter key to specify custom sorting order the alternative using cmp is a deprecated solution as it has to be evaluated multiple times - key is only computed once per element (0.802)
 381. c is a very simple language itself (0.802)
 382. why not use sqlite (0.802)
 383. for peak fitting you ll almost certainly need to use arrays which will complicate things a little but is still very doable with ctypes (0.802)
 384. it can be faster and take less memory (0.802)
 385. the newly created type can be used like this (0.802)
 386. however one big difference between the java and python approaches is that with reference counting in the common case no circular references objects are cleaned up immediately rather than at some indeterminate later date (0.802)
 387. in python (0.802)
 388. i would consider that using python on a new project is completely dependent on what problem you are trying to solve with python (0.802)
 389. there is also the issue of code compilation (0.802)
 390. in the case of other types this is not always the case (0.802)
 391. the first code generation task i often see is people using dynamic languages to maintain constants in the system (0.803)
 392. so you sometimes need it and sometimes don t (0.803)
 393. c# or java (0.803)
 394. if you need to do different processing in your view depending on if it s a user or group object you re trying to look at then you should use two different view functions (0.803)
 395. gwt 1.5 also comes with javascript overlay types that basically allow you to treat a piece of json data like a java object when developing the client side code (0.803)
 396. in addition i used python for all of my small throwaway assignments can you parse the stats in these files into a csv file organized by date and site (0.803)
 397. what s more complete is to have a class definition that is also the sql database definition (0.803)
 398. i haven t used swig or sip but i find writing python wrappers with boost.python to be very powerful and relatively easy to use (0.803)
 399. it combines a software stack with a code generation engine to build services that work efficiently and seamlessly between c++ java python php ruby erlang perl haskell c# cocoa smalltalk and ocaml (0.803)
 400. it includes links to various implementations of ordered dictionaries see also these two recipes in the python cookbook (0.803)
 401. use list comprehensions when the result needs to be iterated over multiple times or where speed is paramount (0.803)
 402. and finally if you need you can specify a custom locale for sorting (0.803)
 403. this will first create an array jobid val1 label val2 username val3 and then convert that to a dictionary (0.804)
 404. is it possible to store these regular expressions in a cache on disk in a pre-compiled manner to avoid having to execute the regex compilations on each import (0.804)
 405. the public names defined by a module are determined by checking the module s namespace for a variable named __all__ (0.804)
 406. for the modules you can add a docstring simply in the module file (0.804)
 407. there are more pentesting libraries available in python than in ruby but not enough to offset metasploit (0.804)
 408. and to get the size of the local file for comparison you can use the os.stat command (0.804)
 409. also garbage collection can be done in a separate thread though it can be a bit tricky (0.804)
 410. in python code it is permissible to break before or after a binary operator as long as the convention is consistent locally (0.804)
 411. to make it work in google app-engine you need to add a file to your main directory (0.804)
 412. in python there is a difference between functions and bound methods (0.804)
 413. tuples and lists have the same uses in general (0.804)
 414. often times you won t even have do_ methods in the base class (0.804)
 415. first your development would be super fast and then once team and codebase grow things are slowing down more than they would with java or c# (0.805)
 416. you probably mean rrsig any otherwise the order is wrong the class needs to be after the type (0.805)
 417. if you want to split your configuration into smaller chunks you can source other files from inside your _vimrc file (0.805)
 418. also due to the ease at which most of the dynamic languages parse text they are great for code generation (0.805)
 419. i expect that learning python is useful and quick to read (0.805)
 420. it looks like the trick is to put the class that s supposed to only have one instance inside of another class (0.805)
 421. setting an attribute on an object won t give a compile-time or a run-time error it will just do nothing useful if the object doesn t access it would also not give an error (0.805)
 422. window is a reference to the global scope like globals in python (0.805)
 423. most python programs will use distutils (0.805)
 424. the lack of anonymous blocks is among the limitations of closures in python (0.806)
 425. if you need to dynamically pick up the module as well you can import it like (0.806)
 426. it also has a nice flexible testing infrastructure that means you can plug lots of different automated testing styles including tests in other languages in the same framework (0.806)
 427. the _ 1 is python s secret reference to the new list (0.806)
 428. don t try to compare them by writing your own tiny benchmarks hello world because you will probably not have results that are representative of a real web site generating a more complex page (0.806)
 429. to get a sorted copy of the list without changing the original use the sorted function (0.806)
 430. for what you re doing you may also want to check out numpy which might do some of the work you would want to push to c as well as offering some additional help in moving data back and forth between python and c (0.806)
 431. are you looking to get a list of objects that have a certain attribute (0.806)
 432. of course it breaks down if two different classes have the same name (0.806)
 433. it is also worth noting the sorted function (0.806)
 434. it should scale better (0.806)
 435. gwt does this with java generating javascript and there is a library for translating haskell into various other languages as well called yhc (0.806)
 436. if x is an instance of a new-style class then type x is typically the same as x.__class__ although this is not guaranteed a new-style class instance is permitted to override the value returned for x.__class__ (0.806)
 437. itself even offers libraries for parsing both xml and json with python (0.806)
 438. i can t speak about this one but i ve used chartdirector for php and it s pretty good (0.806)
 439. you ll need to split the module name off of the path if you wanted to load home mypath mymodule.py you d need to do (0.807)
 440. the will give you all function parameters as a tuple (0.807)
 441. it has been a really long time since i did anything with filemaker pro but i know that it does have capabilities for an odbc and jdbc connection to be made to it however i don t know how or if that translates to the linux perl python world though (0.807)
 442. if the per-record processing load is not high you may be surprised how little performance you lose file io will almost certainly be handled in a compiled c library so the interpreter overhead may be relatively low (0.807)
 443. python s standard library provides pretty good facilities for working with python source (0.807)
 444. if you want to sort according to the unicode rules you ll have to define a custom sort key function (0.807)
 445. there has to be a better way (0.807)
 446. if you can work with integer or fixed point you will be guaranteed precision (0.807)
 447. however python threads are serialized by the gil when they enter interpreter core (0.807)
 448. another usage of the idiom is to unpack argument lists when calling a function (0.807)
 449. if you have a program that basically spawns once compiles a bunch of regexes and then exits you could try re-engineering it to perform multiple tests in one invocation (0.807)
 450. the problem you run into next is how do you keep track of the order that things appear in the class definition (0.808)
 451. believing that python dicts are heavy is an extremely non-pythonistic concept (0.808)
 452. but sometimes people like to rely on reference counting to always free up their resources because it can sometimes make your code a little shorter (0.808)
 453. now you can test whether a value matches one of the values in the set like this (0.808)
 454. finally you could compile the regexes into c-based state machines and then link them in with an extension module (0.808)
 455. you can also add class variables to classes on the fly (0.808)
 456. the real message that s important is applying to whatever it is you like about python directly to some problem you are trying to solve (0.808)
 457. this won t work if the list contains numbers (0.808)
 458. to make sure that len foo does something sensible write a __len__ method (0.808)
 459. all of these algorithms are language-specific of course and they can take significant time to run although it is generally faster than reading the material you are processing (0.808)
 460. personally i think python and ruby would make great first languages (0.808)
 461. this might be way more than you need but there is a django module called mptt - this stores a hierarchical tree structure in an sql database and includes templates for display in the view code (0.808)
 462. fmp also has an xml xslt interface that you can use to query fmp data over an http connection (0.808)
 463. there is no garbage collection to help you (0.808)
 464. jython is great for thread safety comes out better in benchmarks and has a cheeky message for those wanting the gil (0.808)
 465. the last line will define a function bar that when called will call foo with the first argument set to argvalue and all other functions just passed on (0.809)
 466. python lets you create classes with read-only fields lazily-generated fields as well as fields which are checked upon assignment to make sure they re never 0 or null or whatever you want to guard against etc. (0.809)
 467. introspection in python you can get at runtime information about an object or a module about its symbols methods or even its docstrings (0.809)
 468. i think pygame is the standard for game development in python i don t know of any others (0.809)
 469. sql is a whole other ball game but often you get better performance by cut and pasting 100 times instead of trying to do a function due to caching of execution plans or putting complicated logic in a function causing you to go row by row instead of in a set (0.809)
 470. for simple and usually contrived examples it may seem that it s always possible for a given function to have a single purpose resulting in a single value (0.809)
 471. if you don t want to type the values use the following shortcut (0.809)
 472. the officially recommended way to deploy a django project is to use mod_python with apache (0.809)
 473. if the data tables are stored in multiple files it is possible to create a single fmp file with table occurrences aliases pointing to those data tables (0.810)
 474. i agree with corey urllib2 is more complete than urllib and should likely be the module used if you want to do more complex things but to make the answers more complete urllib is a simpler module if you want just the basics (0.810)
 475. i don t really know why you want to do that but you can install an excepthook that will be called by python whenever an uncatched exception is raised and in it clear the array of registered function in the atexit module (0.810)
 476. you can fairly easily discard junk data so all that really concerns you is whether or not somebody would go to the trouble of constructing fake tracebacks to mess with you and that s a very unlikely situation (0.810)
 477. these are concepts which just confuse most people and when you re just learning the syntax and basic framework features you really don t need more complexity (0.810)
 478. you can also specify a custom message and parameter values to subtest (0.810)
 479. however you should definitely test your specific case if the difference might impact the performance of your program -- remember premature optimization is the root of all evil (0.810)
 480. this is really a python wrapper around a c implementation (0.810)
 481. indentation-as-grammar is an integral part of the python language for better and worse (0.810)
 482. you generally shouldn t use input in production code (0.810)
 483. judging by your example property would you be better of with a class approach for the final level and real properties (0.810)
 484. options.query will then be set to the value you passed to the script (0.810)
 485. if it s important to you that the enum type is used at the database level you have three options (0.810)
 486. i was changing the representation of my ast and changing methods and classes around a lot and i found i missed the strong typing that would be available to me in a c++ solution (0.810)
 487. it allows you to easily generate methods in metaclasses or add methods at runtime to pre-existing classes (0.810)
 488. however reusing built-in names as variables isn t all that bad as long as the use is local (0.810)
 489. if you want to go big choose django and you are set (0.810)
 490. the best place to start learning c is the book the c programming language by kernighan and ritchie (0.810)
 491. this way all you need to do is alter module_importer.py per platform (0.810)
 492. i think you ll have to iterate through the various font folders on the system system library fonts library fonts and there can probably be a user-level directory as well library fonts (0.810)
 493. other than that you should simply be as consistent as you can within a module within a package within a project within an organisation (0.811)
 494. there is good support in python and you can write sql queries to get the data out (0.811)
 495. in fact it is quite useful to use the table definition to create certain stored procedures automatically (0.811)
 496. also be clear that python 2.x has limited closure there s no way i can modify x inside bar because writing x bla would declare a local x in bar not assign to x of foo (0.811)
 497. i have embedded this in python functions so it is easy to use from the parsing system which is written in python (0.811)
 498. if you want to store and use the generated results then you re probably better off with a list comprehension (0.811)
 499. it s written around optimization techniques for python (0.811)
 500. i especially find chapter two which teaches you to write a compiler for your own language interesting (0.811)
 501. if you try to return a value that indicates failure it s very well possible somebody could not check the value and end up with some potentially hard to debug errors (0.811)
 502. in python 3.4 pep 435 you can make enum the base class (0.811)
 503. the behaviour of new-style classes differs from that of old-style classes in a number of important details in addition to what type returns (0.811)
 504. blair conrad said static variables declared inside the class definition but not inside a method are class or static variables (0.811)
 505. like ibatis you can merely have sql table definitions and a mapping between the tables and python class definitions (0.811)
 506. to avoid any potential confusion i would like to contrast static variables and immutable objects (0.811)
 507. by prepending a single underscore don t expose or double underscore hide you re telling the user of your class that you intend the member to be private in some way (0.811)
 508. the list of peps python enhancement proposals is in general an excellent place to start if you re looking for the rationale for features of python (0.811)
 509. since the java vm spec is publicly available there is theoretically nothing stopping anyone from implementing a java vm that uses cpython s gc algorithm (0.811)
 510. you can use the built in dir function to get a list of all the attributes a module has (0.811)
 511. in java and c++ this (0.812)
 512. if you decide to go with c a friend has a site that has the sort of programs those of use from older generations remember as basic type-ins (0.812)
 513. as such they have a real role in your code and should most probably be stored in version control (0.812)
 514. in this example things is a list of tuples where the first item in each tuple is the group the second item belongs to (0.812)
 515. you can also do something like this and add the directory that the configuration file is sitting in to the python load path and then just do a normal import assuming you know the name of the file in advance in this case config (0.812)
 516. note whatever the method used the timing will depend on factors you cannot control when will the process switch how often ... this is worse with time.time but exists also with time.clock so you should never run one timing test only but always run a series of test and look at mean variance of the times (0.812)
 517. the original method is also called state_command because it uses the same pattern to implement a state machine getattr self state_ + self.mode (0.812)
 518. at this point it becomes more clear what your processor-intensive algorithms are through proper profiling (0.812)
 519. i doubt that compiling regexes is a significant part of the application s run-time (0.812)
 520. you will need to setup ssh keys to enable password-less logins if you are wrapping system commands like ssh scp or rsync. you can embed a password in a script using paramiko or some other library but you might find the lack of documentation frustrating especially if you are not familiar with the basics of the ssh connection eg - key exchanges agents etc (0.812)
 521. is the choice taken by python (0.812)
 522. if it s internal i would say that protocol buffers are a great idea (0.812)
 523. if you re ever out on the job market pehaps some prospective employers will be aware of the python paradox (0.812)
 524. the name the dictionary and the bases are all passed to the function that is the metaclass and then it is assigned to the variable name in the scope where the class suite was (0.812)
 525. it would be nice if the standard codecs module included a codec for this such that you could do some_string .decode html_entities but unfortunately it doesn t (0.812)
 526. note this is a general software concept and not specific to python (0.812)
 527. this means that the object that is referred to by a given name cannot change if it is of one of the aforementioned object types (0.812)
 528. this is exactly the reason that some functional programmers like reduce or fold functions as such functions are typically called (0.812)
 529. i could only really think of a way to possibly drop the multiple regular expressions and build off of sven s idea for using a delimiter (0.812)
 530. the great news is that languages like python and ruby are open sourced and you can download and study the c source code in order to better understand how it s done (0.813)
 531. you can set py_use_xmlplus in your environment or do it the python way before you import xml.xpath (0.813)
 532. they make it so you need to go pretty far out of your way to try and call the method and if you really need it that badly you must have a pretty good reason (0.813)
 533. if the reason you re checking is so you can do something like if file_exists open_it it s safer to use a try around the attempt to open it (0.813)
 534. if your code is going to be read by people who work with c c++ or if you switch between those languages and python then using for single-character strings and for longer strings might help ease the transition (0.813)
 535. they are far more powerful than their name implies and if you are just displaying model data generic views will do the job (0.813)
 536. the biggest thing you need to know about is the global interpreter lock (0.813)
 537. learning new languages is good for you (0.813)
 538. for c++ check out boost ipc (0.813)
 539. other way around enrich your c c++ (0.813)
 540. if you re dealing with large numbers of large files then you may be better off staying in c++ and teaching your graduate programmers what a pointer is (0.813)
 541. it is possible to achieve the above code using linq though it is slightly against its purposes (0.813)
 542. then you can use the symbolic name for the constants like this (0.813)
 543. python s duck typing was almost too flexible and i found myself adding a lot of assert code to try to check my types as the program ran (0.813)
 544. while django s generic views allow some customization through keyword arguments oo generic views if their behavior is split into a number of separate methods can have much more fine-grained customization via subclassing which lets me repeat myself a lot less (0.813)
 545. garbage collection is faster more time efficient than reference counting if you have enough memory (0.813)
 546. not particularly useful for anything else in my opinion because they are perpetually a few versions behind cpython due to community inertia (0.813)
 547. if i were you i d either use classmethod or define the method independent from the class (0.813)
 548. to sort the list of dictionaries by key name (0.813)
 549. in a more complex program you can seperate these components out as appropriate for instance only using one password manager for the lifetime of the application (0.813)
 550. that said i would never use it any dynamically typed language to develop an application of substantial size (0.813)
 551. it will be used for the upcoming python 2.6 documentation and is used by django and a lot of other python projects (0.813)
 552. also in some cases it can give you bragging rights for a long time (0.813)
 553. in a language that allows anonymous block definition -- ruby c# -- closures can be used to implement what amount to novel new control structures (0.813)
 554. nonetheless you can use the time command to measure everything and can compare it with the timing within a script (0.814)
 555. this changes things from o n to o 1 for calculations at the cost of more work every time a point is created moves or is destroyed (0.814)
 556. if foo is a string or an object or something else if foo may work but it looks like a lazy shortcut to me (0.814)
 557. also iteration over a set isn t random (0.814)
 558. lack of built in libraries languages like php nowadays almost always come with stacks of libraries for things like database connections image manipulation and stacks of other things (0.814)
 559. in option 3 your db_type method would need to check the database engine and set the db column type to a type that actually exists in that database (0.814)
 560. if you re going to learn a language embrace the features of that language rather than try to work around them (0.814)
 561. especially if python makes good on not expanding the list comprehensions unless needed (0.814)
 562. choice of session store will also impact how easy it is to deploy your site (0.814)
 563. no it s not cool like python but it s a very tried-and-true language (0.814)
 564. both modules will have most if not all the analysis tools you re likely to need and both libraries are routinely used with large networks (0.814)
 565. the preferred way of wrapping long lines is by using python s implied line continuation inside parentheses brackets and braces (0.814)
 566. it doesn t get more simple than using pipes which are supported on every os i know of and can be accessed in pretty much every language (0.815)
 567. you can use split from the re module (0.815)
 568. the simplest working template by default should go in my_products_app product_form.html (0.815)
 569. lists are extensible and their contents can change by assignment on the other hand tuples are immutable (0.815)
 570. finally some python objects have non-obvious behaviors (0.815)
 571. the former is a boolean value test and can evaluate to false in different contexts (0.815)
 572. for example a cartesian coordinate is appropriately represented as a tuple of two or three numbers (0.815)
 573. you can provide global settings to bind your app to a specific database without using a separate settings module (0.815)
 574. it would be very useful if you had a giant corpus of data to iterate over and only had so much memory to do it in (0.815)
 575. if i had to bring things to order i wouldn t want to have to manage an ongoing language conversion project on top of everything else or at least i d like some choice when initiating the project (0.815)
 576. however slapping something together in perl python ruby probably would have been worth it (0.815)
 577. i d consider 200ms for something like this to be pretty good a quick test on my oracle server the same table structure with about 500k rows and no indexes takes about 1 - 1.5 seconds which is almost all just oracle sucking the data off disk (0.815)
 578. you can write some fun games or tools very quickly and you learn all of the language features very quickly without having to learn the gui tools first (0.815)
 579. given this most python cpython programmers ascribe to the premature optimization is the root of all evil philosophy (0.815)
 580. it s not something i can easily explain in a few lines but feel free to browse around in my repository for the main class as well as a class that uses it and the option parser (0.815)
 581. you can either use the python documentation string syntax (0.815)
 582. theoretically you can stick with python as python can do almost anything (0.815)
 583. each time an object is referenced and dereferenced the interpreter vm must check to see if the count has gone down to 0 and then deallocate if it did (0.815)
 584. this way fits in better with the rest of the language (0.816)
 585. if your dictionaries are large then that is quite a lot of overhead two large lists that will be thrown away as soon as the merged dict is created (0.816)
 586. however this is a convention and not a language constraint (0.816)
 587. i suggest since it is pure python and you don t need to learn a grammar but it isn t widely used and has comparatively little documentation (0.816)
 588. there are almost always good choices available to fill these needs but you need to include them yourself (0.816)
 589. it s also worth noting that you can use and when calling functions as well (0.816)
 590. you can always use eval instead of locals (0.816)
 591. david mertz s article iterators and simple generators is a pretty good introduction (0.816)
 592. i suppose the closest thing to an enum would be a dictionary defined either like this (0.816)
 593. if you just want a command line argument like a file name or something (0.816)
 594. finally you can loop over the result set fetching one row at a time (0.816)
 595. when no parsing is supposed to happen i usually just escape the data to not interfere with the database when i store it and escape everything i read up from the database to not interfere with html when i display it cgi.escape in python (0.816)
 596. python internally keeps track of the number of elements in these containers (0.816)
 597. you might also want to take a look at the pipes module (0.816)
 598. if valgrind doesn t like your setup another possibility is using libmudflap (0.816)
 599. you basically create a spec file that describes the object you want to pass between processes and there is a compiler that generates code in a number of different languages for reading and writing objects that match the spec (0.816)
 600. in combination with dictionaries hash tables they allow forms of mapping that would otherwise require many levels of association (0.816)
 601. it s a battle-tested war horse and the first tool most research types reach for when they need to do analysis of network based data (0.816)
 602. it generates an xml file which can then be used to build the gui in a number of different languages (0.816)
 603. as sebastjan said you first have to sort your data (0.816)
 604. this also fits in better with python s duck typing philosophy because you don t really care what it is so long as you can call it (0.816)
 605. as others have mentioned rolling your own bundle for frequently used snippets is very helpful (0.816)
 606. you can probably create or find some bindings for the scripting languages as well (0.816)
 607. if the __all__ above is commented out this code will then execute to completion as the default behaviour of is to import all symbols that do not begin with an underscore from the given namespace (0.817)
 608. if you are using c or c++ the point is even more dramatic due to the extra concerns of programming in c or c++ pointers no array bounds checking etc. (0.817)
 609. whenever i need to pass in a collection of items to a function if i want the function to not change the values passed in - i use tuples (0.817)
 610. you could try to use python and extending it with your current c++ modules for the performance heavy parts (0.817)
 611. edit here is a very good article about packaging and deployment of python apps specifically django apps (0.817)
 612. for one-liner use on the command line python is kind of a non-starter (0.817)
 613. sometimes the task is one off ie compare this file to the database and let me know the differences (0.817)
 614. i tend to create new applications for each logically separate set of models (0.817)
 615. the subprocess module provides more powerful facilities for spawning new processes and retrieving their results (0.817)
 616. whether explicit in java or inferred (0.817)
 617. to read user input you can try the cmd module for easily creating a mini-command line interpreter with help texts and autocompletion and raw_input input for python 3+ for reading a line of text from the user (0.817)
 618. learning a new language can be fun (0.817)
 619. but as a language i think python is superior for most things i find myself needing to accomplish (0.817)
 620. to start i would suggest using urllib for the client and a wsgi service behind apache for the server (0.817)
 621. it s worth noting that callable is being removed from python and is not present in 3.0 (0.817)
 622. i don t think it would be a good idea for pyobjc to attempt to document cocoa other than a few basic examples of how to use it from within python (0.817)
 623. the class.__stuff naming convention lets the programmer know he isn t meant to access __stuff from outside (0.818)
 624. in this case image is a c++ object exposed to python an image with float pixels and op is a python defined function or really any python object with a #95 (0.818)
 625. i recommend looking at google s protocol buffers (0.818)
 626. please see others posts for information about implementing statics in python (0.818)
 627. not in a function you should be fine (0.818)
 628. if you have some snippets that are specific to a project or framework you might want to prefix all of them with a common letter to keep the namespace tidy (0.818)
 629. edit it seemes the processing module is being included in the standard library as of version 2.6 import multiprocessing (0.818)
 630. by writing high-level and significantly slower python code one can optimize the bottlenecks out using c c++ bindings when your application is nearing completion (0.818)
 631. very nice to get a feel for how things could be done smart in python (0.818)
 632. but if not you should probably be using the subprocess module (0.818)
 633. you still have to compile but compile times will be shorter than c++ (0.818)
 634. often only a few percent of objects have to be copied (0.818)
 635. i do find it worrisome that you ve got developers who are so bad with memory management that you want to switch languages (0.818)
 636. pypy is an experimental interpreter compiler that may one day supplant cpython but for now is more of a testbed for new ideas (0.818)
 637. since you mentioned that you ll be building fairly simple xml the minidom module part of the python standard library will likely suit your needs (0.818)
 638. list isn t a value type so it isn t bound by the same rules (0.818)
 639. like df though i usually just use string constants in place of enums (0.818)
 640. for example python web applications can take advantage of mod_wsgi to talk to web servers which is faster than any of the typical ways that php talks to web servers even mod_php ends up being slower if you re using apache because apache can only use the prefork mpm with mod_php rather than multi-threaded mpm like worker (0.818)
 641. you really want to check the known input fixed c++ code against expected output what comes out of the final python program (0.818)
 642. you could be using a class as class generator (0.819)
 643. as dave says it may be a better choice where the backend is in java as it has nice rpc hooks for that case (0.819)
 644. furthermore list comprehensions are generally preferred to map thus i d expect generator expressions to be preferred to imap (0.819)
 645. if your idea is to compare the languages i d say anything outside them is not relevant for comparison purposes (0.819)
 646. if the string you have contains one then you should use the other (0.819)
 647. you might want to check mysql s timeout variables (0.819)
 648. array.sort is a good example (0.819)
 649. i use triple double quotes for docstrings and raw string literals for regular expressions even if they aren t needed (0.819)
 650. even if the sequence is not large building the list means iterating over the whole of the sequence before in could start its search (0.819)
 651. for example django makes this data available as an attribute of the uploadedfile object (0.819)
 652. perhaps the only immediate short-term benefit is that developers learn to distinguish the nails that need a python perl ruby -hammer (0.819)
 653. if you re used to writing code that runs in a straight line and only calls functions which return immediately with results the idea of waiting for something to call you back might be confusing (0.819)
 654. there are also some frameworks that you should look into (0.819)
 655. for the long term though which language will teach me more and serve me better in my career as a programmer i would definitely say ironruby this would be true of cpython vs cruby also (0.819)
 656. you should have a look at django and especially its newforms and admin modules (0.819)
 657. i think i d do it by appending indents and dedents to a list while recursing through the tree and then sending that travelogue list to the template (0.819)
 658. qt uses c++ with several non-standard extensions implemented by an additional pre-processor that generates standard c++ code before compilation (0.819)
 659. remember that they are only compiled the first time the module is imported in the current execution -- thereafter the module and its attributes are cached in memory (0.819)
 660. but how does this handle language specific sorting rules (0.819)
 661. that is each index contains a mostly complete copy of the data and thus every index adds significantly to time taken to perform a write and the storage space used (0.819)
 662. basically use a generator expression if all you re doing is iterating once (0.819)
 663. more information can be found by reading about descriptors and metaclass programming (0.819)
 664. i was working on a language parser and needed to represent an ast in python (0.819)
 665. they can be passed as parameters to other functions defined inside other function and have lexical scope (0.819)
 666. to get rid of this field is required you need to make it not required by using blank true and possibly null true as well if it s not a charfield (0.819)
 667. otherwise what s the point of learning a new language (0.820)
 668. if you host is using python version 2.5 or higher support for sqlite3 databases is built in sqlite allows you to have a relational database that is simply a file in your filesystem (0.820)
 669. one is to write a supressions file for valgrind that turns off reporting of stuff that you re not working on (0.820)
 670. as a general technique include a host column in your database schema attached to the data you want to be host-specific then include the host http header in the query when you are retrieving data (0.820)
 671. seriously its use of tab is a command not a character is absolutely perfect for python development (0.820)
 672. as millerdev points out this creates a class-level i variable but this is distinct from any instance-level i variable so you could have (0.820)
 673. part of learning a new programming language is learning to read code in that language (0.820)
 674. the increment in the original foreach loop will not affect the contents of the array the only way to do this remains a for loop (0.820)
 675. the thread module offers low level threading and synchronization using simple lock objects (0.820)
 676. and if you just want to sanitize the html look at the lxml.html.clean module (0.820)
 677. at that point you can get bogged down in details memory etc and also talk about general design principles (0.820)
 678. you can use django s cache framework to help you with that (0.820)
 679. some frameworks such as django have you define the urls in your application through regular expressions (0.821)
 680. they can be pretty much any other object (0.821)
 681. to guard against typos invalid values you can insert checks in selected places (0.821)
 682. so to make it a little more clear the same principles could apply to your interpreted code (0.821)
 683. help on built-in function id in module (0.821)
 684. for developing portable network programs of any sort in python twisted is quite useful (0.821)
 685. the pythonic way to do it is from the pep 8 style guide where yes means recommended and no means not recommended (0.821)
 686. anyway i could go on and on with further examples but python is just overall a much more flexible and expressive language (0.821)
 687. if you need to be sure it s a file (0.821)
 688. adding a __len__ method to a class is what makes the len magic work (0.821)
 689. the dis module disassembles the byte code for a function and is useful to see the difference between tuples and lists (0.821)
 690. making a variable static takes this a step further by disallowing the variable name to point to any object but that to which it currently points (0.821)
 691. therefore they should return a single object (0.821)
 692. of the same name but in any case this is the function to use for (0.821)
 693. but even if you don t is it more fun to spend time cutting pasting or is it more fun to create a perl python ruby script once and then have that generate the code (0.822)
 694. it s expressive and dynamic typing makes it more concise in many cases (0.822)
 695. there s no easy way to find out the memory size of a python object (0.822)
 696. otherwise you basically have to iterate through every element of the iterator until you get to the one you want (0.822)
 697. you would also be suprised by the number of developers using vim + screen as a day to day environment (0.822)
 698. clarification in case it is not obvious at first sight locale.strcoll seems to be the function you need avoiding the str.lower or locale.strxfrm duplicate strings (0.822)
 699. there is no guarantee that you will get a better precision that 1 second even though time returns a floating point number (0.822)
 700. you can also use the new bin function to get the binary representation of a number (0.822)
 701. if your leaning is to python you may be interested in checking out the python wrapper for filemaker (0.822)
 702. i just realized that you seem to have no use for indices for the above query and most likely aren t using any too so my advice on indices probably wasn t helpful (0.822)
 703. a better approach suggested by robert in comments is the builtin vars function (0.822)
 704. there is a nice eclipse plugin from google that makes it very easy to develop and deploy applications that use gae gwt or both (0.822)
 705. built-in syntax for lists and dictionaries (0.822)
 706. it s also very easy to write your own buildsteps to execute specific tasks (0.822)
 707. else if i want to have the function to alter the values i use list (0.822)
 708. if generators instead of actual lists are ok this would do that (0.822)
 709. you can write your own function that converts to .lower each character at a time to avoid duplicating both strings but i m sure it will very cpu-intensive and extremely inefficient (0.822)
 710. however i suggest using to get the attribute rather than relying on value being the third attribute (0.822)
 711. steve johnson has already answered regarding static methods also documented under built-in functions in the python library reference (0.823)
 712. method should never be overridden by subclasses it is used to determine object identity that is a.equal (0.823)
 713. and the values don t have to be strings (0.823)
 714. readable and you don t have to worry about calling a function like len to iterate through the variable (0.823)
 715. for instance lists reserve space for more objects than they have most of the time (0.823)
 716. cons as a dynamic language has way (0.823)
 717. davidg recommends using dicts (0.823)
 718. perhaps the best thing would be to turn on show whitespace in your editor (0.823)
 719. key is used to sort by an arbitrary value and itemgetter sets that value to each item s name attribute (0.823)
 720. most graphics libraries in python wxpython are just python wrappers around c++ libraries anyway so you re pretty much writing to a c++ backend (0.823)
 721. actual choice is a matter of personal taste although none of these two i consider lightweigth pylons might seem lighter but in fact is not and recently django gathered some additional weight - most likely you will not fit even small application like personal blog in 20mb resident memory (0.823)
 722. you can t assign new values to method arguments and have it reflected outside method scope (0.823)
 723. you can specify the pipes directly and avoid using the shell (0.823)
 724. regarding your question there s no hard and fast rule either way (0.823)
 725. if this were not the case designing a datastore schema would be a lot more work you would have to think carefully about the primary key for each type and consider the effect of your decision on the locality of data (0.823)
 726. a script may not export variables back to its parent process the shell or to the environment (0.823)
 727. also c lang is oriented on structured programming so you will need to learn how to implement data structures and algorithms without oop goodness (0.823)
 728. when using another ajax framework you will also have this difference between server and client side language (0.823)
 729. the contents of the tuple are the the same as the three last arguments to gobject.signal_new (0.823)
 730. a good source for python examples in open-source code is the nullege search engine (0.823)
 731. under the hood the generator object supports the iterator protocol and does something roughly similar to the class counter (0.823)
 732. perhaps it is useful to shadow a production process by starting with an overall mission statement then a plan and or flowchart then elaborate into some pseudo code leaning towards the syntax you will ultimately use before actually writing the code (0.823)
 733. if you want to use a web framework you ll need to setup mod_python or fastcgi (0.823)
 734. you could probably achieve the same effect with macros especially in a language like lisp which has extremely powerful macros (0.823)
 735. why look for a 3rd party product when you can make it yourself very quickly (0.823)
 736. if you want to parallelize your app to take advantage of dual-core architecture you need to consider breaking your app up into multiple processes (0.823)
 737. there are solutions like running multiple python interpreters concurrently using a c based threading library (0.824)
 738. use ruby (0.824)
 739. however on the performance front loading it into memory may not be a problem but if you use too much you ll end up swapping to disk which will kill the performance of even python s highly efficient dicts (0.824)
 740. if you need full spec compliance or raw speed and can cope with the distribution of native code go with libxml2 (0.824)
 741. python has excellent support for json objects json objects are infact python dictionaries (0.824)
 742. edit the pep was accepted and added in python 2.7 and 3.1 (0.824)
 743. however some people get used to reduce and come to prefer it to list comprehensions especially haskell programmers (0.824)
 744. the double means there can be any number of extra named parameters (0.824)
 745. you can switch the data type to a integer (0.824)
 746. i think the first option is considered the best practice (0.824)
 747. this can be useful for smaller result sets but can have bad side effects if the result set is large (0.824)
 748. relative imports use a module s __name__ attribute to determine that module s position in the package hierarchy (0.824)
 749. it s not possible but you could write this yourself (0.824)
 750. it will be a lot less work to rebuild the 80 of it that you really need (0.824)
 751. is always returns true if it compares the same object instance (0.824)
 752. this will help in you design and debug and so on all your future web applications however you write them (0.824)
 753. there is a python binding for it (0.824)
 754. you can read more about it at (0.824)
 755. remember that you can always get the class name through (0.824)
 756. this will as you want it put the final dict in z and make the value for key b be properly overridden by the second y dict s value (0.824)
 757. again not sure if this helps since you re using python under a delphi environment (0.824)
 758. if you find that the aggregation leads to a significant slowdown try if python does it faster obtaining the raw data through the plain select from the comparison (0.824)
 759. python supports multiple return values so use it when appropriate (0.824)
 760. your app will be big you ll have to bundle the whole python runtime with your app (0.824)
 761. then again sometimes particularly when you re looking for libraries for common needs the only effect of that is that you get deluged with choices (0.824)
 762. you could always write one yourself (0.824)
 763. if you want to be able to talk to processes on remote machines you ll want to look at using sockets instead (0.824)
 764. website hosting services are more likely to offer php support than python support (0.824)
 765. if you need to learn python from scratch - you can start here - good begginers guide (0.824)
 766. problem is this is hard to test the generated code might not be suited to actually run in the environment of the unit test system and how do you encode the expected results (0.824)
 767. it s called a closure because it closes over the outside variable constant -- it s not just a function but an enclosure of the environment where the function was created (0.825)
 768. beside not having python 3 available on your target platforms it will take some time until important external python libraries will be ported and usable on python 3 (0.825)
 769. the pep also includes some interesting benchmarks (0.825)
 770. and of course no one would even mention the awful slow ugly thing called java (0.825)
 771. it s very declarative you tell it the names of the options and the effects they should have setting a boolean field and it hands you back a dictionary populated according to your specifications (0.825)
 772. for example to parse an xml document in java you say (0.825)
 773. you could well imagine a folder in your source tree that is not a python module for example a folder containing only resources images and no code (0.825)
 774. so to sort according to the current locale taking language-specific rules into account cmp_to_key is a helper function from functools (0.825)
 775. the reason i disagree with the given answers is that the first does not produce classes that are a distant subclass of the given class and the second includes the given class (0.825)
 776. if you want a copy that s a merge then use copy or deepcopy depending on what you want and then update (0.825)
 777. note i ve since found lxml and for me it s definitely the best xml lib out there for python (0.825)
 778. in option 2 you could use database-backend-specific custom sql to ensure your alter table is only run on mysql (0.825)
 779. they allow namespace packages packages that just contain other (0.825)
 780. long lines can be broken over multiple lines by wrapping expressions in parentheses (0.825)
 781. usually i see people using staticmethods and classmethods when all they really need to do is use python s module-level namespaces better (0.825)
 782. maybe they expect people using to adhere to more pythonic documentation practices and that would interfere with the special doxygen commands (0.825)
 783. not sure if this is what you are after but you can search source code on google (0.825)
 784. like justin said to implement this you would need to use a custom metaclass on class app and a bunch of properties on para and button (0.825)
 785. this also works only for user-defined classes not builtin types (0.825)
 786. you can go with fastcgi but i would argue that you d be better off just writing a straight wsgi app if you re going to go that route the way wsgi works really isn t a whole heck of a lot different from cgi (0.825)
 787. the file names should be the same as the names of the models whose tables they ll operate on (0.825)
 788. for example you can actually write a function that returns a reference to the comprehension (0.825)
 789. however as of python 2.7 optparse is deprecated see why use argparse rather than optparse (0.825)
 790. hettinger does an excellent talk slides about python s built-in collections called core python containers - under the hood (0.826)
 791. django has a wonderful community very eager to help see #django on freenode (0.826)
 792. you may also want to look at panda which is a very easy to use 3d engine with python bindings (0.826)
 793. to check whether a path object exists independently of whether is it a file or directory use exists (0.826)
 794. there are a list of built-in exceptions which generally has some description of when these exceptions might be raised (0.826)
 795. opennlp is a great project if you d like to play around with natural language processing (0.826)
 796. you can also instantiate them dynamically (0.826)
 797. you might want to stick with the reference implementation in the pep if you want your code to be compatible with the official version if the proposal is eventually accepted (0.826)
 798. you can also use python to hit against command line programs generate a ton of garbage but still valid test data etc (0.826)
 799. while the apis for setting them up and connecting them are different they both just act like streams of data (0.826)
 800. there s a list of django screencasts on the django project web wiki (0.826)
 801. in general different languages and different machine architectures will give a different result (0.826)
 802. ruby is a lovely language to learn - and lacks some of the cruft in perl 5 (0.826)
 803. the method mystaticmethod is set as a classmethod using the decorator classmethod (0.826)
 804. python elects to make things like this explicit rather than based on a rule (0.826)
 805. one will want to pop push splice slice search insert before insert after etc with a list (0.826)
 806. to define custom template tags or filters you must create a sub-directory in the application s directory called templatetags and it must contain a file named __init__.py so that it can be imported as a python module (0.826)
 807. they re designed to let you easy show data from a model without having to write your own view and stuff about mapping url paramaters to views fetching data handling edge cases rendering output etc (0.826)
 808. int this example the tells to read big-endian the h reads a 2-byte short and the l is for a 4-byte long (0.826)
 809. it also is great for comparing test output between builds but the distributed master slave stuff is comparatively more complicated because you need a java environment on the slaves too (0.826)
 810. as matt suggested it s a good idea to use hasattr if any of the objects in bar can be missing an id attribute (0.826)
 811. usually contains the location of the script that was invoked by the python interpreter (0.826)
 812. you can also relatively easily build lists as well although depending upon your client you may hit problems unless you give length hints (0.826)
 813. and then after they agree explain how it is some other technology and that it is worth the expense to get more training and training for others on how to do it better (0.826)
 814. firstly note that python allows for the following no need for the parenthesis (0.826)
 815. i use pygame myself and it is very good (0.826)
 816. this allows other python threads to use the cpu while others wait (0.826)
 817. for the packages you can document it in __init__.py (0.826)
 818. i think that it s good enough to replace the switch statement (0.826)
 819. however in case you re unsure how to actually implement something like this here s a complete and working implementation that subclasses dict which i ve just written and tested (0.826)
 820. however instead of defining the sum with some for-loop you can just as easily define it with reduce (0.827)
 821. well if you don t mind copying the original method in the subclass you can use the following technique (0.827)
 822. the shell will always accept a quoted filename and remove the surrounding quotes before passing it to the program in question (0.827)
 823. metasploit s framework opcode and shellcode databases (0.827)
 824. now whether or not you roll your own using urllib wrap around a command line utility like you re doing or import a third party library and use that like you re saying this interface stays the same (0.827)
 825. i find it hard to understand when people flag this as a problem with python (0.827)
 826. the best way to process command line arguments is the argparse module (0.827)
 827. blazeds contains a subset of lcds features and was made open source (0.827)
 828. while i agree with lucas that regular expressions are not all that scary i still think that you should go with a specialized html parser (0.827)
 829. what kind of information needs to be encoded in the request (0.827)
 830. thus you need to re-consider why you want to use threads (0.827)
 831. also there s a difference between an object and a class (0.827)
 832. try out the excellent processing module which implements the threading api for separate processes (0.827)
 833. both of these are performance trade offs in a way - scripting languages make the trade off in terms of developer efficiency where as c prefers performance (0.827)
 834. another such case is with assert statements (0.827)
 835. i don t believe there is an established best practice (0.827)
 836. you might also like using the processing module (0.827)
 837. as an aside when using functions instead of methods you could also use functools.partial (0.827)
 838. access speeds should be the same they are both stored as contiguous arrays in the memory (0.827)
 839. if you want to be able to use multiple cpu cores there are a few options (0.827)
 840. you might be able to find something useful there (0.827)
 841. here is a complete version of the code you are trying to write i m duplicating everything because you have a weird keyword argument in your original example that you seem to be conflating with an assignment and i m using the failunless function name because that s the non-aliased name of the function (0.827)
 842. in this setting returning multiple values is akin to returning a single instance of an anonymous class with several member variables (0.827)
 843. if you re not planning to open the file immediately you can use os.path.isfile (0.827)
 844. if you can t explain something to a six-year-old you really don t understand it yourself (0.827)
 845. to match your example as far as possible i would make next a generator and iterate over it (0.827)
 846. there are some people who don t like using eggs because they don t like the idea of a software program installing whatever software it wants (0.827)
 847. if you re not using a database use the file system cache but the default database backend is the best safest and simplest option in almost all cases (0.827)
 848. this is also the reason why gc can be faster than malloc free (0.827)
 849. from its earliest posix incarnation popen has always been meant to open a process and allow you to read and write from its stdio like a file (0.827)
 850. you can hash on the client side using javascript (0.827)
 851. surely matplotlib is great but i believe cairoplot is better looking (0.827)
 852. django did the same thing when it resolved to the name attribute of the user object rather than looking for a variable called name (0.828)
 853. others are fixes that could not be implemented before for compatibility concerns like the method resolution order in case of multiple inheritance (0.828)
 854. if you re really dead-set against it you can always pass your scripts through a pre-processor but that s a bad idea on many levels (0.828)
 855. you ll have to change your login scripts to change your path (0.828)
 856. i suppose that the name popen makes it more likely for people used to the old functions to find and use the new ones (0.828)
 857. i personally use a mix of web frameworks by using cherrypy for my web server stuff form parameters session handling url mapping etc and django for my object-relational mapping and templates (0.828)
 858. however when using python for real-world applications you quickly run into many cases where returning multiple values is necessary and results in cleaner code (0.828)
 859. you can also pass the init parameters to the instance variables by position (0.828)
 860. boost has a python interface library which could help you (0.828)
 861. you may want to read this object identity and equivalence (0.828)
 862. obviously it gets more complicated if you need to quote escape commas etc in the values (0.828)
 863. it is usually a safe choice not just because of the easy and fun programming experience but if you re stuck there s an awesome community around the language who are just happy to help out (0.828)
 864. opening sockets in python is pretty simple (0.828)
 865. you just have to remember that the first argument in a method definition header is a reference to the object (0.828)
 866. if it needs deep understanding of the models in your project it s probably more cohesive to stick it with the models (0.828)
 867. they allow applications or libraries to specify the needed (0.828)
 868. it would have taken less than one to create the python script to inspect each file match which customer it goes to and then move the file to the appropriate place.....again not part of the standard job (0.828)
 869. there is not much to differentiate the languages (0.828)
 870. except the arguments are passed to zip directly after being converted to a tuple so there s no need to worry about the number of arguments getting too big (0.828)
 871. for example to make x + y work for your own class you write a __add__ method (0.828)
 872. functions should serve single purpose (0.828)
 873. it s one of the preferred languages over at google - it s several years ahead of ruby in terms of maturity what ever that really means - but managers like that (0.828)
 874. and then you can send and recv like any other socket (0.829)
 875. you can give it whatever name you want (0.829)
 876. it also as far as i know makes the implementation of the python runtime easier (0.829)
 877. if you care about tabbing and using space or enter on buttons then you will have to implement duplicating existing code keypress events too (0.829)
 878. it may look cleaner using a key instead a cmp (0.829)
 879. the compiler is incapable of telling you about it until it actually executes the code so in infrequently-used code paths such as error handlers you can easily have unseen bugs lurking around (0.829)
 880. it has also very nice api allowing you to easily list links in html documents or list forms sanitize html and more (0.829)
 881. how about a dictionary (0.829)
 882. edit pep8 now recommends the opposite convention for breaking at binary operations used by mathematicians and their publishers to improve readability (0.829)
 883. if it takes you 2 hours to hand code 4 hours to do the generator but you know you ll have to hand code equivalent work another 5 or 6 times than it is obviously better to create the generator (0.829)
 884. having a reduce makes it trivial to lift these operations to lists or trees or whatever you got for fold functions in general (0.829)
 885. often when i find myself helping others they will begin to think of me as answer book to all of their questions and instead of experimenting to find an answer they simply ask me (0.829)
 886. module attributes named as such will not be copied into an importing module when using the method (0.829)
 887. at the core of libraries like twisted the function in the main loop is not sleep but an operating system call like select or poll as exposed by a module like the python select module (0.829)
 888. i ve yet to see an operation that can t be done using a global function or an instance method (0.829)
 889. using the implicit booleanness of the empty list is quite pythonic (0.829)
 890. the name scrambling is used to ensure that subclasses don t accidentally override the private methods and attributes of their superclasses (0.829)
 891. if you come to a point where you can t quickly determine the structure of your code you should probably consider refactoring and adding some comments (0.829)
 892. you will want to add a dot before the module name to avoid collisions with a top-level model named project (0.829)
 893. python has a pretty excellent list comprehension system that lets you manipulate lists pretty elegantly and depending on exactly what you want to accomplish this can be done a couple of ways (0.830)
 894. this is done to prevent directories with a common name such as string from unintentionally hiding valid modules that occur later on the module search path (0.830)
 895. yes i would say django is definitely the way to go (0.830)
 896. there are also some interesting articles on the google testing blog discussing why singleton are may be bad and are an anti-pattern (0.830)
 897. this means two things 1 you rarely ever find yourself using a lock statement in python and 2 if you want to take advantage of multi-processor systems you have to use separate processes (0.830)
 898. this can happen on a fundamental level such as c++ versus javascript versus lisp or on an implementation level in which a ruby construct provides a eureka moment for a solution in your real job. (0.830)
 899. yes it should work on any linux distribution (0.830)
 900. you can then use this function as follows assuming unary is located in the called image that also contains image and a load function (0.830)
 901. using indentation in a language doesn t necessarily mean that the language s grammar can not be context free (0.830)
 902. its modular design ensures that you can mix and match components orm templating engine url dispatch ... instead of being stuck with a component the framework provides you you can replace it with any 3rd party equivalent instead (0.830)
 903. you can use doxygen to document your python code (0.830)
 904. is there a reason you can t override the base class s execute function directly (0.830)
 905. if this data change typically a single producer rebuilts the tuple (0.830)
 906. there is no reason why you shouldn t use gae and google web toolkit gwt together (0.830)
 907. use lxml which is the best xml html library for python (0.830)
 908. once you have scipy installed type the following at the python command prompt (0.830)
 909. it s a good vehicle to teach object-oriented programming and most algorithms (0.830)
 910. if you go ironpython you may have to write some c# vb.net helper classes here and there when working with various com objects such as ones in office but otherwise it is supposed to be pretty functional and nice (0.830)
 911. the following code demonstrates that doing a case-insensitive compare by calling .lower on two strings which are each almost a megabyte in size takes about 0.009 seconds on my 1.8ghz desktop computer (0.830)
 912. being relatively new to python i m not sure what the most common idiom is but the simplest thing i can think of is just using a module instead of a class (0.830)
 913. creating the c# c++ java code (0.830)
 914. see this post on why it is not really feasible to remove the gil from the cpython implementation and this for some practical elaboration and workarounds (0.830)
 915. on the other hand len silly_walks isn t any more onerous than silly_walks.len and guido has said that he actually prefers it (0.830)
 916. i have found the performance of queries specifying the like operator to be less than stellar (0.830)
 917. as ricardo reyes suggested if it contains non-string types such as integers floats bools none then do (0.831)
 918. the names given in __all__ are all considered public and are required to exist (0.831)
 919. in my opinion python is more than ready for developing complex applications (0.831)
 920. so maybe your best option is to use a standard for loop like this (0.831)
 921. you can do this in the assignment class by either overriding the save method or using signals (0.831)
 922. for example if you have an app named weblog containing a model named entry then the file sql entry.sql inside the app s directory can be used to modify or insert data into the entries table as soon as it s been created (0.831)
 923. usually time is more precise because operating systems do not store the process running time with the precision they store the system time ie actual time (0.831)
 924. usually you want to avoid code that chains two system calls on the same file because you never know what will happen to the file in between your two calls in your code (0.831)
 925. i d say that the best garbage collector is the one with the best performance which currently seems to be the java-style generational garbage collectors that can run in a separate thread and has all these crazy optimizations etc (0.831)
 926. have a look at the process management functions in the os module (0.831)
 927. linq is not intended to modify existing collections or sequences (0.831)
 928. what i like you can handle the parsing in a for loop rather than using callbacks (0.831)
 929. that depends on the implementation if it will be distributed i would go with java seeing as you know that because of its portability (0.831)
 930. i mean you could read a book and have a rough understanding of a language s syntax and semantics but until you have a program that you want written you ll never grasp the nettle (0.831)
 931. instead of looking at the language - i d look at your working environment (0.831)
 932. all of the implementations are listed here (0.831)
 933. the simplest would be to use cgi and write normal python scripts while the second is using a web framework like django or pylons (0.831)
 934. complete list is at (0.831)
 935. if no index is used scan the whole table to determine which rows are needed (0.831)
 936. note in particular you probably don t want to embed the proxy password in the url or the python source code unless it s just a quick hack (0.831)
 937. if there were particular modules you were interested in you might be able to decompile them if written in python or even look at the source if they re in the standard library (0.831)
 938. if your problem is largely object-oriented with the database being used for persistence then the nearly transparent orm layer of django has advantages (0.831)
 939. gwt has features that make remote invocation of java code on the server easier but these are entirely optional (0.831)
 940. qt s own opengl based surfaces using qpainter are known to be much faster than cairo (0.831)
 941. might you explain why you want specifically cairo in qt (0.831)
 942. and if you are only looking to do things in some particular area which is well covered by libraries for python or ruby the mass of other stuff on cpan isn t necessarily an advantage (0.831)
 943. all of python s database libraries mysqldb cx_oracle etc always sanitize the parameters you pass (0.831)
 944. having said that it is possible to build executables that include the python interpreter and any libraries you use (0.831)
 945. beidy recommends classmethod s over staticmethod as the method then receives the class type as the first argument but i m still a little fuzzy on the advantages of this approach over staticmethod (0.832)
 946. when i first learned python i worked for a java shop (0.832)
 947. next you need to limit the query by the number of records you need for example using .limit (0.832)
 948. to check if to objects are the same try (0.832)
 949. there are a number of other arguments you can also pass to override default behaviors (0.832)
 950. you can think of it as something like .jar files for java (0.832)
 951. your template will get the context variable form which you just need to wrap in a form tag and add a submit button (0.832)
 952. i personally think that chapter from dive into python is great (0.832)
 953. if this is which language runs better on the clr then right now ironpython wins hands down (0.832)
 954. for the sort of examples you describe you probably want the timeit module instead (0.832)
 955. you will find yourself focusing more on the problem at hand rather than the details in the underlying implementation (0.832)
 956. for communication the process.stdin and process.stdout pipes are considered standard file objects (0.832)
 957. edit i should also point out that you can put some of the code in c c++ if you want to get around the gil as well (0.832)
 958. if not then you shouldn t worry about the performance and just use the .lower method (0.832)
 959. the dir builtin will give you all the object s attributes including special methods like __str__ __dict__ and a whole bunch of others which you probably don t want (0.832)
 960. one of the reasons is because it can be confusing to a reader that doesn t know the name is overridden (0.832)
 961. django orm has a cleaner syntax and is easier to write for activerecord pattern (0.832)
 962. first i would suggest you have a look at rapid development with python django and google app engine (0.832)
 963. for such a thing to exist there would need to be a standardized gui markup language with several implementations (0.832)
 964. for mysql i seem to remember that it s recommended to skip indices if you assume that the query fetches more than 10 of all the data in the table (0.832)
 965. you can use getattr in this fashion on class instance bound methods module-level methods class methods. (0.832)
 966. i also thinks it looks a lot cleaner to have each port be handled in the same way instead of having the main thread handle one port and an additional thread handle the other (0.832)
 967. then you can use this to manipulate values (0.832)
 968. extensive cross-references semantic markup and automatic links for functions classes glossary terms and similar pieces of information (0.832)
 969. you can create a list comprehension that would reference itself as it is being built (0.832)
 970. i leave it up to you to google for the relevant docs on the os and sys modules (0.833)
 971. because of the we need to use java mentality the resulting project will be larger and more expensive than finishing the django demo (0.833)
 972. use . manage.py sql appname to see the sql django generates manually modify it to use the enum type and run it yourself (0.833)
 973. better developer better quality (0.833)
 974. note the keys in mydict have to be named exactly like the parameters of function foo (0.833)
 975. many people have suggested dive into python which is probably the best python book out there for someone who s already a good programmer (0.833)
 976. however the examples above are a bit naive because they don t take locale into account and perform a case-sensitive sorting (0.833)
 977. it would be fine to use it for stack overflow which has three developers and i guess no more than 30k lines of code (0.833)
 978. the testing framework will also find any doctests in that module but the preferred place for those is of course the docstrings of the classes or functions they re designed to test (0.833)
 979. this is very efficient if you have enough memory (0.833)
 980. do a quick google for python gil for more information (0.833)
 981. can i tell postgres that the table is read only so it can optimize any locking code (0.833)
 982. this won t work as well if you re adding new tools all the time because the users will need to reload the aliases (0.833)
 983. are you looking for python specific translation or just the general how do you compile some code to bytecode (0.833)
 984. see the guide to python introspection for more information (0.833)
 985. explicit is better than implicit (0.833)
 986. a new-style class is simply a user-defined type no more no less (0.833)
 987. especially for small simple stuff i like the event-driven theory of parsing rather than setting up a whole slew of callbacks for a relatively simple structure (0.833)
 988. of course nothing will stop you from writing your own framework eg (0.833)
 989. steve johnson also answered regarding static methods also documented under built-in functions in the python library reference (0.833)
 990. the open source python package scipy has quite a large set of optimization routines including some for multivariable problems with constraints which is what fmincon does i believe (0.833)
 991. i would recommend using beautiful soup module instead and it has good documentation (0.833)
 992. jython for example does not suffer from this due to using the java thread model (0.833)
 993. py2exe is a python distutils extension which converts python scripts into executable windows programs able to run without requiring a python installation (0.833)
 994. this is a really insecure way to hash passwords (0.833)
 995. in this case that formal parameter receives a dictionary containing the excess keyword arguments using the keywords as keys and the argument values as corresponding values or a new empty dictionary if there were no excess keyword arguments (0.833)
 996. so the trade-off is clear if you have to work in a memory-constrained environment or if you need precise finalizers use reference counting (0.833)
 997. something you should be very mindful of while teaching your brother to program is for him not to rely too heavily on you (0.833)
 998. you can t do this with the base dict class -- it s ordered by hash (0.833)
 999. indentation is syntax for python (0.833)